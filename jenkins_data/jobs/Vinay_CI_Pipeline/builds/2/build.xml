<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1546.v62a_c59c112dd">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>vinay</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.2.33-484.v2fcd689980d1">
      <queuingDurationMillis>3</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>1</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@752.vdddedf804e72">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2273.v643f36ed9e94">
      <stagesUUID>c3b4b553-524e-495f-8389-57e61e756ff1</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2273.v643f36ed9e94">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Checkout</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>git</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>branch</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                                <value class="string">&quot;${BRANCH_NAME}&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                            </entry>
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>url</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">https://github.com/vinaymedicherla/jenkins.git</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>credentialsId</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">github-pat</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Get Git Tag or Branch</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">def gitTag = sh(script: &quot;git describe --tags --exact-match || true&quot;, returnStdout: true).trim()
                    if (!gitTag) {
                        gitTag = sh(script: &quot;git describe --tags `git rev-list --tags --max-count=1` || true&quot;, returnStdout: true).trim()
                    }
                    if (!gitTag) {
                        gitTag = BRANCH_NAME
                    }
                    echo &quot;âœ… Using tag/branch: ${gitTag}&quot;
                    env.IMAGE_TAG = gitTag</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Build &amp; Push Docker Image</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">def imageFullName = &quot;${DOCKERHUB_USER}/${IMAGE_NAME}:${IMAGE_TAG}&quot;

                    sh &quot;&quot;&quot;
                        echo &quot;ðŸš€ Building image with tag: ${imageFullName}&quot;
                        docker build -t ${imageFullName} .
                    &quot;&quot;&quot;

                    withCredentials([usernamePassword(credentialsId: &apos;docker-hub-creds&apos;,
                                                      usernameVariable: &apos;DOCKER_USER&apos;,
                                                      passwordVariable: &apos;DOCKER_PASS&apos;)]) {
                        sh &quot;&quot;&quot;
                            echo &quot;${DOCKER_PASS}&quot; | docker login -u &quot;${DOCKER_USER}&quot; --password-stdin
                            docker push ${imageFullName}
                            docker logout
                        &quot;&quot;&quot;
                    }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>c3b4b553-524e-495f-8389-57e61e756ff1</uuid>
          </stages>
          <environment>
            <variables class="linked-hash-map">
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>DOCKERHUB_USER</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">vinaymedicherla</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>IMAGE_NAME</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">jenkins</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>BRANCH_NAME</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">VINAY_REPO</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
            </variables>
          </environment>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@4183.v94b_6fd39da_c1">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@1447.v4cb_b_539b_5321">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.33-484.v2fcd689980d1">
      <queuingDurationMillis>22</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>20</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
      <executingDurationMillis>5609</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
  </actions>
  <queueId>3</queueId>
  <timestamp>1758362507545</timestamp>
  <startTime>1758362507593</startTime>
  <result>FAILURE</result>
  <duration>6838</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>pipeline {
    agent any

    environment {
        DOCKERHUB_USER = &apos;vinaymedicherla&apos;   // âœ… Corrected
        IMAGE_NAME = &apos;jenkins&apos;
        BRANCH_NAME = &apos;VINAY_REPO&apos;
    }

    stages {
        stage(&apos;Checkout&apos;) {
            steps {
                git branch: &quot;${BRANCH_NAME}&quot;, 
                    url: &apos;https://github.com/vinaymedicherla/jenkins.git&apos;,
                    credentialsId: &apos;github-pat&apos;
            }
        }

        stage(&apos;Get Git Tag or Branch&apos;) {
            steps {
                script {
                    def gitTag = sh(script: &quot;git describe --tags --exact-match || true&quot;, returnStdout: true).trim()
                    if (!gitTag) {
                        gitTag = sh(script: &quot;git describe --tags `git rev-list --tags --max-count=1` || true&quot;, returnStdout: true).trim()
                    }
                    if (!gitTag) {
                        gitTag = BRANCH_NAME
                    }
                    echo &quot;âœ… Using tag/branch: ${gitTag}&quot;
                    env.IMAGE_TAG = gitTag
                }
            }
        }

        stage(&apos;Build &amp; Push Docker Image&apos;) {
            steps {
                script {
                    def imageFullName = &quot;${DOCKERHUB_USER}/${IMAGE_NAME}:${IMAGE_TAG}&quot;

                    sh &quot;&quot;&quot;
                        echo &quot;ðŸš€ Building image with tag: ${imageFullName}&quot;
                        docker build -t ${imageFullName} .
                    &quot;&quot;&quot;

                    withCredentials([usernamePassword(credentialsId: &apos;docker-hub-creds&apos;,
                                                      usernameVariable: &apos;DOCKER_USER&apos;,
                                                      passwordVariable: &apos;DOCKER_PASS&apos;)]) {
                        sh &quot;&quot;&quot;
                            echo &quot;${DOCKER_PASS}&quot; | docker login -u &quot;${DOCKER_USER}&quot; --password-stdin
                            docker push ${imageFullName}
                            docker logout
                        &quot;&quot;&quot;
                    }
                }
            }
        }
    }
}
</script>
    <loadedScripts class="linked-hash-map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>1249436963</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>166169617</long>
      </entry>
      <entry>
        <string>runQueue</string>
        <long>10658870476</long>
      </entry>
      <entry>
        <string>run</string>
        <long>5369008953</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>63733242</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>3423890113</long>
      </entry>
    </timings>
    <internalCalls class="sorted-set">
      <string>org.jenkinsci.plugins.pipeline.StageStatus.TAG_NAME</string>
    </internalCalls>
    <sandbox>true</sandbox>
    <iota>26</iota>
    <head>1:26</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
    <storageDir>workflow-completed</storageDir>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>